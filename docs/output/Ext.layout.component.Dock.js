Ext.data.JsonP.Ext_layout_component_Dock({"mixins":[],"component":false,"aliases":{"layout":["dock"]},"requires":[],"members":{"method":[{"required":null,"static":false,"protected":true,"owner":"Ext.layout.component.AbstractDock","name":"adjustAutoBox","id":"method-adjustAutoBox","template":false,"tagname":"method","deprecated":null},{"required":null,"static":false,"protected":true,"owner":"Ext.layout.component.AbstractDock","name":"adjustSizedBox","id":"method-adjustSizedBox","template":false,"tagname":"method","deprecated":null},{"required":null,"static":false,"protected":true,"owner":"Ext.layout.component.AbstractDock","name":"calculateDockBoxes","id":"method-calculateDockBoxes","template":false,"tagname":"method","deprecated":null},{"required":null,"static":false,"protected":true,"owner":"Ext.Base","name":"callOverridden","id":"method-callOverridden","template":false,"tagname":"method","deprecated":null},{"required":null,"static":false,"protected":true,"owner":"Ext.Base","name":"callParent","id":"method-callParent","template":false,"tagname":"method","deprecated":null},{"required":null,"static":false,"protected":true,"owner":"Ext.layout.component.AbstractDock","name":"configureItem","id":"method-configureItem","template":false,"tagname":"method","deprecated":null},{"required":null,"static":false,"protected":false,"owner":"Ext.layout.Layout","name":"destroy","id":"method-destroy","template":true,"tagname":"method","deprecated":null},{"required":null,"static":false,"protected":true,"owner":"Ext.layout.component.AbstractDock","name":"dockItems","id":"method-dockItems","template":false,"tagname":"method","deprecated":null},{"required":null,"static":false,"protected":true,"owner":"Ext.layout.component.AbstractDock","name":"getLayoutItems","id":"method-getLayoutItems","template":false,"tagname":"method","deprecated":null},{"required":null,"static":false,"protected":false,"owner":"Ext.layout.component.Component","name":"getRenderTarget","id":"method-getRenderTarget","template":false,"tagname":"method","deprecated":null},{"required":null,"static":false,"protected":false,"owner":"Ext.layout.component.Component","name":"getTarget","id":"method-getTarget","template":false,"tagname":"method","deprecated":null},{"required":null,"static":false,"protected":true,"owner":"Ext.layout.component.AbstractDock","name":"initBox","id":"method-initBox","template":false,"tagname":"method","deprecated":null},{"required":null,"static":false,"protected":true,"owner":"Ext.Base","name":"initConfig","id":"method-initConfig","template":false,"tagname":"method","deprecated":null},{"required":null,"static":false,"protected":false,"owner":"Ext.layout.component.Component","name":"needsLayout","id":"method-needsLayout","template":false,"tagname":"method","deprecated":null},{"required":null,"static":false,"protected":true,"owner":"Ext.layout.component.AbstractDock","name":"onLayout","id":"method-onLayout","template":false,"tagname":"method","deprecated":null},{"required":null,"static":false,"protected":true,"owner":"Ext.layout.component.AbstractDock","name":"renderItems","id":"method-renderItems","template":false,"tagname":"method","deprecated":null},{"required":null,"static":false,"protected":true,"owner":"Ext.layout.component.AbstractDock","name":"setBodyBox","id":"method-setBodyBox","template":false,"tagname":"method","deprecated":null},{"required":null,"static":false,"protected":false,"owner":"Ext.layout.component.Component","name":"setElementSize","id":"method-setElementSize","template":false,"tagname":"method","deprecated":null},{"required":null,"static":false,"protected":false,"owner":"Ext.layout.component.Component","name":"setTargetSize","id":"method-setTargetSize","template":false,"tagname":"method","deprecated":null},{"required":null,"static":false,"protected":true,"owner":"Ext.Base","name":"statics","id":"method-statics","template":false,"tagname":"method","deprecated":null}],"property":[{"required":null,"static":false,"protected":true,"owner":"Ext.Base","name":"self","id":"property-self","template":null,"tagname":"property","deprecated":null}],"css_var":[],"css_mixin":[],"cfg":[],"event":[]},"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'><a href='#!/api/Ext.Base' rel='Ext.Base' class='docClass'>Ext.Base</a><div class='subclass '><a href='#!/api/Ext.layout.Layout' rel='Ext.layout.Layout' class='docClass'>Ext.layout.Layout</a><div class='subclass '><a href='#!/api/Ext.layout.component.Component' rel='Ext.layout.component.Component' class='docClass'>Ext.layout.component.Component</a><div class='subclass '><a href='#!/api/Ext.layout.component.AbstractDock' rel='Ext.layout.component.AbstractDock' class='docClass'>Ext.layout.component.AbstractDock</a><div class='subclass '><strong>Ext.layout.component.Dock</strong></div></div></div></div></div><h4>Files</h4><div class='dependency'><a href='source/Dock.html#Ext-layout-component-Dock' target='_blank'>Dock.js</a></div></pre><div class='doc-contents'><p class='private'><strong>NOTE</strong> This is a private utility class for internal use by the framework. Don't rely on its existence.</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-property'>Properties</h3><div class='subsection'><div id='property-self' class='member first-child inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base3.html#Ext-Base-property-self' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-property-self' class='name expandable'>self</a><span> : <a href=\"#!/api/Ext.Class\" rel=\"Ext.Class\" class=\"docClass\">Ext.Class</a></span><strong class='protected signature'>protected</strong></div><div class='description'><div class='short'>Get the reference to the current class from which this object was instantiated. ...</div><div class='long'><p>Get the reference to the current class from which this object was instantiated. Unlike <a href=\"#!/api/Ext.Base-method-statics\" rel=\"Ext.Base-method-statics\" class=\"docClass\">statics</a>,\n<code>this.self</code> is scope-dependent and it's meant to be used for dynamic inheritance. See <a href=\"#!/api/Ext.Base-method-statics\" rel=\"Ext.Base-method-statics\" class=\"docClass\">statics</a>\nfor a detailed comparison</p>\n\n<pre><code>Ext.define('My.Cat', {\n    statics: {\n        speciesName: 'Cat' // My.Cat.speciesName = 'Cat'\n    },\n\n    constructor: function() {\n        alert(this.self.speciesName); / dependent on 'this'\n\n        return this;\n    },\n\n    clone: function() {\n        return new this.self();\n    }\n});\n\n\nExt.define('My.SnowLeopard', {\n    extend: 'My.Cat',\n    statics: {\n        speciesName: 'Snow Leopard'         // My.SnowLeopard.speciesName = 'Snow Leopard'\n    }\n});\n\nvar cat = new My.Cat();                     // alerts 'Cat'\nvar snowLeopard = new My.SnowLeopard();     // alerts 'Snow Leopard'\n\nvar clone = snowLeopard.clone();\nalert(Ext.getClassName(clone));             // alerts 'My.SnowLeopard'\n</code></pre>\n</div></div></div></div></div><div class='members-section'><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div class='definedBy'>Defined By</div><h4 class='members-subtitle'>Instance Methods</h3><div id='method-adjustAutoBox' class='member first-child inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.layout.component.AbstractDock' rel='Ext.layout.component.AbstractDock' class='defined-in docClass'>Ext.layout.component.AbstractDock</a><br/><a href='source/AbstractDock.html#Ext-layout-component-AbstractDock-method-adjustAutoBox' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.layout.component.AbstractDock-method-adjustAutoBox' class='name expandable'>adjustAutoBox</a>( <span class='pre'>Object box, Number index</span> ) : Object<strong class='protected signature'>protected</strong></div><div class='description'><div class='short'>This method will adjust the position of the docked item inside an AutoContainerLayout\nand adjust the body box accordi...</div><div class='long'><p>This method will adjust the position of the docked item inside an AutoContainerLayout\nand adjust the body box accordingly.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>box</span> : Object<div class='sub-desc'><p>The box containing information about the width and height\nof this docked item</p>\n</div></li><li><span class='pre'>index</span> : Number<div class='sub-desc'><p>The index position of this docked item</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>The adjusted box</p>\n</div></li></ul></div></div></div><div id='method-adjustSizedBox' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.layout.component.AbstractDock' rel='Ext.layout.component.AbstractDock' class='defined-in docClass'>Ext.layout.component.AbstractDock</a><br/><a href='source/AbstractDock.html#Ext-layout-component-AbstractDock-method-adjustSizedBox' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.layout.component.AbstractDock-method-adjustSizedBox' class='name expandable'>adjustSizedBox</a>( <span class='pre'>Object box, Number index</span> ) : Object<strong class='protected signature'>protected</strong></div><div class='description'><div class='short'>This method will adjust the position of the docked item and adjust the body box\naccordingly. ...</div><div class='long'><p>This method will adjust the position of the docked item and adjust the body box\naccordingly.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>box</span> : Object<div class='sub-desc'><p>The box containing information about the width and height\nof this docked item</p>\n</div></li><li><span class='pre'>index</span> : Number<div class='sub-desc'><p>The index position of this docked item</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>The adjusted box</p>\n</div></li></ul></div></div></div><div id='method-calculateDockBoxes' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.layout.component.AbstractDock' rel='Ext.layout.component.AbstractDock' class='defined-in docClass'>Ext.layout.component.AbstractDock</a><br/><a href='source/AbstractDock.html#Ext-layout-component-AbstractDock-method-calculateDockBoxes' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.layout.component.AbstractDock-method-calculateDockBoxes' class='name expandable'>calculateDockBoxes</a>( <span class='pre'>Array items</span> )<strong class='protected signature'>protected</strong></div><div class='description'><div class='short'>This method will set up some initial information about the panel size and bodybox\nand then loop over all the items yo...</div><div class='long'><p>This method will set up some initial information about the panel size and bodybox\nand then loop over all the items you pass it to take care of stretching, aligning,\ndock position and all calculations involved with adjusting the body box.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>items</span> : Array<div class='sub-desc'><p>Array containing all the docked items we have to layout</p>\n</div></li></ul></div></div></div><div id='method-callOverridden' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base3.html#Ext-Base-method-callOverridden' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-method-callOverridden' class='name expandable'>callOverridden</a>( <span class='pre'>Array/Arguments args</span> ) : Object<strong class='protected signature'>protected</strong></div><div class='description'><div class='short'>Call the original method that was previously overridden with override\n\nExt.define('My.Cat', {\n    constructor: functi...</div><div class='long'><p>Call the original method that was previously overridden with <a href=\"#!/api/Ext.Base-static-method-override\" rel=\"Ext.Base-static-method-override\" class=\"docClass\">override</a></p>\n\n<pre><code>Ext.define('My.Cat', {\n    constructor: function() {\n        alert(\"I'm a cat!\");\n\n        return this;\n    }\n});\n\nMy.Cat.override({\n    constructor: function() {\n        alert(\"I'm going to be a cat!\");\n\n        var instance = this.callOverridden();\n\n        alert(\"Meeeeoooowwww\");\n\n        return instance;\n    }\n});\n\nvar kitty = new My.Cat(); // alerts \"I'm going to be a cat!\"\n                          // alerts \"I'm a cat!\"\n                          // alerts \"Meeeeoooowwww\"\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>args</span> : Array/Arguments<div class='sub-desc'><p>The arguments, either an array or the <code>arguments</code> object</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>Returns the result after calling the overridden method</p>\n</div></li></ul></div></div></div><div id='method-callParent' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base3.html#Ext-Base-method-callParent' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-method-callParent' class='name expandable'>callParent</a>( <span class='pre'>Array/Arguments args</span> ) : Object<strong class='protected signature'>protected</strong></div><div class='description'><div class='short'>Call the parent's overridden method. ...</div><div class='long'><p>Call the parent's overridden method. For example:</p>\n\n<pre><code>Ext.define('My.own.A', {\n    constructor: function(test) {\n        alert(test);\n    }\n});\n\nExt.define('My.own.B', {\n    extend: 'My.own.A',\n\n    constructor: function(test) {\n        alert(test);\n\n        this.callParent([test + 1]);\n    }\n});\n\nExt.define('My.own.C', {\n    extend: 'My.own.B',\n\n    constructor: function() {\n        alert(\"Going to call parent's overriden constructor...\");\n\n        this.callParent(arguments);\n    }\n});\n\nvar a = new My.own.A(1); // alerts '1'\nvar b = new My.own.B(1); // alerts '1', then alerts '2'\nvar c = new My.own.C(2); // alerts \"Going to call parent's overriden constructor...\"\n                         // alerts '2', then alerts '3'\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>args</span> : Array/Arguments<div class='sub-desc'><p>The arguments, either an array or the <code>arguments</code> object\nfrom the current method, for example: <code>this.callParent(arguments)</code></p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>Returns the result from the superclass' method</p>\n</div></li></ul></div></div></div><div id='method-configureItem' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.layout.component.AbstractDock' rel='Ext.layout.component.AbstractDock' class='defined-in docClass'>Ext.layout.component.AbstractDock</a><br/><a href='source/AbstractDock.html#Ext-layout-component-AbstractDock-method-configureItem' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.layout.component.AbstractDock-method-configureItem' class='name expandable'>configureItem</a>( <span class='pre'><a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a> item</span> )<strong class='protected signature'>protected</strong></div><div class='description'><div class='short'>We are overriding the Ext.layout.Layout configureItem method to also add a class that\nindicates the position of the d...</div><div class='long'><p>We are overriding the <a href=\"#!/api/Ext.layout.Layout\" rel=\"Ext.layout.Layout\" class=\"docClass\">Ext.layout.Layout</a> configureItem method to also add a class that\nindicates the position of the docked item. We use the itemCls (x-docked) as a prefix.\nAn example of a class added to a dock: right item is x-docked-right</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>item</span> : <a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a><div class='sub-desc'><p>The item we are configuring</p>\n</div></li></ul></div></div></div><div id='method-destroy' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.layout.Layout' rel='Ext.layout.Layout' class='defined-in docClass'>Ext.layout.Layout</a><br/><a href='source/Layout.html#Ext-layout-Layout-method-destroy' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.layout.Layout-method-destroy' class='name expandable'>destroy</a>( <span class='pre'></span> )<strong class='template signature'>template</strong></div><div class='description'><div class='short'>Destroys this layout. ...</div><div class='long'><p>Destroys this layout. This is a template method that is empty by default, but should be implemented\nby subclasses that require explicit destruction to purge event handlers or remove DOM nodes.</p>\n<div class='signature-box template'><p>This is a template method. A hook into the functionality of this class.Feel free to override it in child classes.</p></div></div></div></div><div id='method-dockItems' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.layout.component.AbstractDock' rel='Ext.layout.component.AbstractDock' class='defined-in docClass'>Ext.layout.component.AbstractDock</a><br/><a href='source/AbstractDock.html#Ext-layout-component-AbstractDock-method-dockItems' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.layout.component.AbstractDock-method-dockItems' class='name expandable'>dockItems</a>( <span class='pre'>Array items, Boolean autoBoxes</span> )<strong class='protected signature'>protected</strong></div><div class='description'><div class='short'>This method will first update all the information about the docked items,\nbody dimensions and position, the panel's t...</div><div class='long'><p>This method will first update all the information about the docked items,\nbody dimensions and position, the panel's total size. It will then\nset all these values on the docked items and panel body.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>items</span> : Array<div class='sub-desc'><p>Array containing all the docked items</p>\n</div></li><li><span class='pre'>autoBoxes</span> : Boolean<div class='sub-desc'><p>Set this to true if the Panel is part of an\nAutoContainerLayout</p>\n</div></li></ul></div></div></div><div id='method-getLayoutItems' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.layout.component.AbstractDock' rel='Ext.layout.component.AbstractDock' class='defined-in docClass'>Ext.layout.component.AbstractDock</a><br/><a href='source/AbstractDock.html#Ext-layout-component-AbstractDock-method-getLayoutItems' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.layout.component.AbstractDock-method-getLayoutItems' class='name expandable'>getLayoutItems</a>( <span class='pre'></span> ) : Array<strong class='protected signature'>protected</strong></div><div class='description'><div class='short'>Returns an array containing all the visible docked items inside this layout's owner Panel ...</div><div class='long'><p>Returns an array containing all the <b>visible</b> docked items inside this layout's owner Panel</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Array</span><div class='sub-desc'><p>An array containing all the <b>visible</b> docked items of the Panel</p>\n</div></li></ul></div></div></div><div id='method-getRenderTarget' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.layout.component.Component' rel='Ext.layout.component.Component' class='defined-in docClass'>Ext.layout.component.Component</a><br/><a href='source/Component3.html#Ext-layout-component-Component-method-getRenderTarget' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.layout.component.Component-method-getRenderTarget' class='name expandable'>getRenderTarget</a>( <span class='pre'></span> ) : <a href=\"#!/api/Ext.Element\" rel=\"Ext.Element\" class=\"docClass\">Ext.Element</a></div><div class='description'><div class='short'>Returns the element into which rendering must take place. ...</div><div class='long'><p>Returns the element into which rendering must take place. Defaults to the owner Component's encapsulating element.</p>\n\n\n<p>May be overridden in Component layout managers which implement an inner element.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Ext.Element\" rel=\"Ext.Element\" class=\"docClass\">Ext.Element</a></span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-getTarget' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.layout.component.Component' rel='Ext.layout.component.Component' class='defined-in docClass'>Ext.layout.component.Component</a><br/><a href='source/Component3.html#Ext-layout-component-Component-method-getTarget' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.layout.component.Component-method-getTarget' class='name expandable'>getTarget</a>( <span class='pre'></span> ) : <a href=\"#!/api/Ext.Element\" rel=\"Ext.Element\" class=\"docClass\">Ext.Element</a></div><div class='description'><div class='short'>Returns the owner component's resize element. ...</div><div class='long'><p>Returns the owner component's resize element.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Ext.Element\" rel=\"Ext.Element\" class=\"docClass\">Ext.Element</a></span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-initBox' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.layout.component.AbstractDock' rel='Ext.layout.component.AbstractDock' class='defined-in docClass'>Ext.layout.component.AbstractDock</a><br/><a href='source/AbstractDock.html#Ext-layout-component-AbstractDock-method-initBox' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.layout.component.AbstractDock-method-initBox' class='name expandable'>initBox</a>( <span class='pre'><a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a> item</span> ) : Object<strong class='protected signature'>protected</strong></div><div class='description'><div class='short'>This method will create a box object, with a reference to the item, the type of dock\n(top, left, bottom, right). ...</div><div class='long'><p>This method will create a box object, with a reference to the item, the type of dock\n(top, left, bottom, right). It will also take care of stretching and aligning of the\ndocked items.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>item</span> : <a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a><div class='sub-desc'><p>The docked item we want to initialize the box for</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>The initial box containing width and height and other useful information</p>\n</div></li></ul></div></div></div><div id='method-initConfig' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base3.html#Ext-Base-method-initConfig' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-method-initConfig' class='name expandable'>initConfig</a>( <span class='pre'>Object config</span> ) : Object<strong class='protected signature'>protected</strong></div><div class='description'><div class='short'>Initialize configuration for this class. ...</div><div class='long'><p>Initialize configuration for this class. a typical example:</p>\n\n<pre><code>Ext.define('My.awesome.Class', {\n    // The default config\n    config: {\n        name: 'Awesome',\n        isAwesome: true\n    },\n\n    constructor: function(config) {\n        this.initConfig(config);\n\n        return this;\n    }\n});\n\nvar awesome = new My.awesome.Class({\n    name: 'Super Awesome'\n});\n\nalert(awesome.getName()); // 'Super Awesome'\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>config</span> : Object<div class='sub-desc'>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>mixins The mixin prototypes as key - value pairs</p>\n</div></li></ul></div></div></div><div id='method-needsLayout' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.layout.component.Component' rel='Ext.layout.component.Component' class='defined-in docClass'>Ext.layout.component.Component</a><br/><a href='source/Component3.html#Ext-layout-component-Component-method-needsLayout' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.layout.component.Component-method-needsLayout' class='name expandable'>needsLayout</a>( <span class='pre'>Number width, Number height</span> )</div><div class='description'><div class='short'>Check if the new size is different from the current size and only\ntrigger a layout if it is necessary. ...</div><div class='long'><p>Check if the new size is different from the current size and only\ntrigger a layout if it is necessary.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>width</span> : Number<div class='sub-desc'><p>The new width to set.</p>\n</div></li><li><span class='pre'>height</span> : Number<div class='sub-desc'><p>The new height to set.</p>\n</div></li></ul></div></div></div><div id='method-onLayout' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.layout.component.AbstractDock' rel='Ext.layout.component.AbstractDock' class='defined-in docClass'>Ext.layout.component.AbstractDock</a><br/><a href='source/AbstractDock.html#Ext-layout-component-AbstractDock-method-onLayout' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.layout.component.AbstractDock-method-onLayout' class='name expandable'>onLayout</a>( <span class='pre'><a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a> owner, <a href=\"#!/api/Ext.Element\" rel=\"Ext.Element\" class=\"docClass\">Ext.Element</a> target, Array args</span> )<strong class='protected signature'>protected</strong></div><div class='description'><div class='short'> ...</div><div class='long'>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>owner</span> : <a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a><div class='sub-desc'><p>The Panel that owns this DockLayout</p>\n</div></li><li><span class='pre'>target</span> : <a href=\"#!/api/Ext.Element\" rel=\"Ext.Element\" class=\"docClass\">Ext.Element</a><div class='sub-desc'><p>The target in which we are going to render the docked items</p>\n</div></li><li><span class='pre'>args</span> : Array<div class='sub-desc'><p>The arguments passed to the ComponentLayout.layout method</p>\n</div></li></ul></div></div></div><div id='method-renderItems' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.layout.component.AbstractDock' rel='Ext.layout.component.AbstractDock' class='defined-in docClass'>Ext.layout.component.AbstractDock</a><br/><a href='source/AbstractDock.html#Ext-layout-component-AbstractDock-method-renderItems' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.layout.component.AbstractDock-method-renderItems' class='name expandable'>renderItems</a>( <span class='pre'>Object items, Object target</span> )<strong class='protected signature'>protected</strong></div><div class='description'><div class='short'>Render the top and left docked items before any existing DOM nodes in our render target,\nand then render the right an...</div><div class='long'><p>Render the top and left docked items before any existing DOM nodes in our render target,\nand then render the right and bottom docked items after. This is important, for such things\nas tab stops and ARIA readers, that the DOM nodes are in a meaningful order.\nOur collection of docked items will already be ordered via Panel.getDockedItems().</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>items</span> : Object<div class='sub-desc'>\n</div></li><li><span class='pre'>target</span> : Object<div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-setBodyBox' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.layout.component.AbstractDock' rel='Ext.layout.component.AbstractDock' class='defined-in docClass'>Ext.layout.component.AbstractDock</a><br/><a href='source/AbstractDock.html#Ext-layout-component-AbstractDock-method-setBodyBox' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.layout.component.AbstractDock-method-setBodyBox' class='name expandable'>setBodyBox</a>( <span class='pre'>Object box</span> )<strong class='protected signature'>protected</strong></div><div class='description'><div class='short'>This function will be called by the dockItems method. ...</div><div class='long'><p>This function will be called by the dockItems method. Since the body is positioned absolute,\nwe need to give it dimensions and a position so that it is in the middle surrounded by\ndocked items</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>box</span> : Object<div class='sub-desc'><p>An object containing new x, y, width and height values for the\nPanel's body</p>\n</div></li></ul></div></div></div><div id='method-setElementSize' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.layout.component.Component' rel='Ext.layout.component.Component' class='defined-in docClass'>Ext.layout.component.Component</a><br/><a href='source/Component3.html#Ext-layout-component-Component-method-setElementSize' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.layout.component.Component-method-setElementSize' class='name expandable'>setElementSize</a>( <span class='pre'>Number width, Number height</span> )</div><div class='description'><div class='short'>Set the size of any element supporting undefined, null, and values. ...</div><div class='long'><p>Set the size of any element supporting undefined, null, and values.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>width</span> : Number<div class='sub-desc'><p>The new width to set.</p>\n</div></li><li><span class='pre'>height</span> : Number<div class='sub-desc'><p>The new height to set.</p>\n</div></li></ul></div></div></div><div id='method-setTargetSize' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.layout.component.Component' rel='Ext.layout.component.Component' class='defined-in docClass'>Ext.layout.component.Component</a><br/><a href='source/Component3.html#Ext-layout-component-Component-method-setTargetSize' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.layout.component.Component-method-setTargetSize' class='name expandable'>setTargetSize</a>( <span class='pre'>Number width, Number height</span> )</div><div class='description'><div class='short'>Set the size of the target element. ...</div><div class='long'><p>Set the size of the target element.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>width</span> : Number<div class='sub-desc'><p>The new width to set.</p>\n</div></li><li><span class='pre'>height</span> : Number<div class='sub-desc'><p>The new height to set.</p>\n</div></li></ul></div></div></div><div id='method-statics' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base3.html#Ext-Base-method-statics' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-method-statics' class='name expandable'>statics</a>( <span class='pre'></span> ) : <a href=\"#!/api/Ext.Class\" rel=\"Ext.Class\" class=\"docClass\">Ext.Class</a><strong class='protected signature'>protected</strong></div><div class='description'><div class='short'>Get the reference to the class from which this object was instantiated. ...</div><div class='long'><p>Get the reference to the class from which this object was instantiated. Note that unlike <a href=\"#!/api/Ext.Base-property-self\" rel=\"Ext.Base-property-self\" class=\"docClass\">self</a>,\n<code>this.statics()</code> is scope-independent and it always returns the class from which it was called, regardless of what\n<code>this</code> points to during run-time</p>\n\n<pre><code>Ext.define('My.Cat', {\n    statics: {\n        totalCreated: 0,\n        speciesName: 'Cat' // My.Cat.speciesName = 'Cat'\n    },\n\n    constructor: function() {\n        var statics = this.statics();\n\n        alert(statics.speciesName);     // always equals to 'Cat' no matter what 'this' refers to\n                                        // equivalent to: My.Cat.speciesName\n\n        alert(this.self.speciesName);   // dependent on 'this'\n\n        statics.totalCreated++;\n\n        return this;\n    },\n\n    clone: function() {\n        var cloned = new this.self;                      // dependent on 'this'\n\n        cloned.groupName = this.statics().speciesName;   // equivalent to: My.Cat.speciesName\n\n        return cloned;\n    }\n});\n\n\nExt.define('My.SnowLeopard', {\n    extend: 'My.Cat',\n\n    statics: {\n        speciesName: 'Snow Leopard'     // My.SnowLeopard.speciesName = 'Snow Leopard'\n    },\n\n    constructor: function() {\n        this.callParent();\n    }\n});\n\nvar cat = new My.Cat();                 // alerts 'Cat', then alerts 'Cat'\n\nvar snowLeopard = new My.SnowLeopard(); // alerts 'Cat', then alerts 'Snow Leopard'\n\nvar clone = snowLeopard.clone();\nalert(Ext.getClassName(clone));         // alerts 'My.SnowLeopard'\nalert(clone.groupName);                 // alerts 'Cat'\n\nalert(My.Cat.totalCreated);             // alerts 3\n</code></pre>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Ext.Class\" rel=\"Ext.Class\" class=\"docClass\">Ext.Class</a></span><div class='sub-desc'>\n</div></li></ul></div></div></div></div><div class='subsection'><div class='definedBy'>Defined By</div><h4 class='members-subtitle'>Static Methods</h3><div id='static-method-addStatics' class='member first-child inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base3.html#Ext-Base-static-method-addStatics' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-static-method-addStatics' class='name expandable'>addStatics</a>( <span class='pre'>Object members</span> ) : <a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a><strong class='static signature'>static</strong></div><div class='description'><div class='short'>Add / override static properties of this class. ...</div><div class='long'><p>Add / override static properties of this class.</p>\n\n<pre><code>Ext.define('My.cool.Class', {\n    ...\n});\n\nMy.cool.Class.addStatics({\n    someProperty: 'someValue',      // My.cool.Class.someProperty = 'someValue'\n    method1: function() { ... },    // My.cool.Class.method1 = function() { ... };\n    method2: function() { ... }     // My.cool.Class.method2 = function() { ... };\n});\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>members</span> : Object<div class='sub-desc'>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a></span><div class='sub-desc'><p>this</p>\n</div></li></ul></div></div></div><div id='static-method-borrow' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base3.html#Ext-Base-static-method-borrow' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-static-method-borrow' class='name expandable'>borrow</a>( <span class='pre'><a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a> fromClass, String/String[] members</span> ) : <a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a><strong class='static signature'>static</strong></div><div class='description'><div class='short'>Borrow another class' members to the prototype of this class. ...</div><div class='long'><p>Borrow another class' members to the prototype of this class.</p>\n\n<pre><code>Ext.define('Bank', {\n    money: '$$$',\n    printMoney: function() {\n        alert('$$$$$$$');\n    }\n});\n\nExt.define('Thief', {\n    ...\n});\n\nThief.borrow(Bank, ['money', 'printMoney']);\n\nvar steve = new Thief();\n\nalert(steve.money); // alerts '$$$'\nsteve.printMoney(); // alerts '$$$$$$$'\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>fromClass</span> : <a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a><div class='sub-desc'><p>The class to borrow members from</p>\n</div></li><li><span class='pre'>members</span> : String/String[]<div class='sub-desc'><p>The names of the members to borrow</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a></span><div class='sub-desc'><p>this</p>\n</div></li></ul></div></div></div><div id='static-method-create' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base3.html#Ext-Base-static-method-create' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-static-method-create' class='name expandable'>create</a>( <span class='pre'></span> ) : Object<strong class='static signature'>static</strong></div><div class='description'><div class='short'>Create a new instance of this Class. ...</div><div class='long'><p>Create a new instance of this Class.</p>\n\n<pre><code>Ext.define('My.cool.Class', {\n    ...\n});\n\nMy.cool.Class.create({\n    someConfig: true\n});\n</code></pre>\n\n<p>All parameters are passed to the constructor of the class.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>the created instance.</p>\n</div></li></ul></div></div></div><div id='static-method-createAlias' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base3.html#Ext-Base-static-method-createAlias' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-static-method-createAlias' class='name expandable'>createAlias</a>( <span class='pre'>String/Object alias, String/Object origin</span> )<strong class='static signature'>static</strong></div><div class='description'><div class='short'>Create aliases for existing prototype methods. ...</div><div class='long'><p>Create aliases for existing prototype methods. Example:</p>\n\n<pre><code>Ext.define('My.cool.Class', {\n    method1: function() { ... },\n    method2: function() { ... }\n});\n\nvar test = new My.cool.Class();\n\nMy.cool.Class.createAlias({\n    method3: 'method1',\n    method4: 'method2'\n});\n\ntest.method3(); // test.method1()\n\nMy.cool.Class.createAlias('method5', 'method3');\n\ntest.method5(); // test.method3() -&gt; test.method1()\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>alias</span> : String/Object<div class='sub-desc'><p>The new method name, or an object to set multiple aliases. See\n<a href=\"#!/api/Ext.Function-method-flexSetter\" rel=\"Ext.Function-method-flexSetter\" class=\"docClass\">flexSetter</a></p>\n</div></li><li><span class='pre'>origin</span> : String/Object<div class='sub-desc'><p>The original method name</p>\n</div></li></ul></div></div></div><div id='static-method-getName' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base3.html#Ext-Base-static-method-getName' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-static-method-getName' class='name expandable'>getName</a>( <span class='pre'></span> ) : String<strong class='static signature'>static</strong></div><div class='description'><div class='short'>Get the current class' name in string format. ...</div><div class='long'><p>Get the current class' name in string format.</p>\n\n<pre><code>Ext.define('My.cool.Class', {\n    constructor: function() {\n        alert(this.self.getName()); // alerts 'My.cool.Class'\n    }\n});\n\nMy.cool.Class.getName(); // 'My.cool.Class'\n</code></pre>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>className</p>\n</div></li></ul></div></div></div><div id='static-method-implement' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base3.html#Ext-Base-static-method-implement' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-static-method-implement' class='name expandable'>implement</a>( <span class='pre'>Object members</span> )<strong class='static signature'>static</strong></div><div class='description'><div class='short'>Add methods / properties to the prototype of this class. ...</div><div class='long'><p>Add methods / properties to the prototype of this class.</p>\n\n<pre><code>Ext.define('My.awesome.Cat', {\n    constructor: function() {\n        ...\n    }\n});\n\n My.awesome.Cat.implement({\n     meow: function() {\n        alert('Meowww...');\n     }\n });\n\n var kitty = new My.awesome.Cat;\n kitty.meow();\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>members</span> : Object<div class='sub-desc'>\n</div></li></ul></div></div></div><div id='static-method-override' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base3.html#Ext-Base-static-method-override' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-static-method-override' class='name expandable'>override</a>( <span class='pre'>Object members</span> ) : <a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a><strong class='static signature'>static</strong></div><div class='description'><div class='short'>Override prototype members of this class. ...</div><div class='long'><p>Override prototype members of this class. Overridden methods can be invoked via\n<a href=\"#!/api/Ext.Base-method-callOverridden\" rel=\"Ext.Base-method-callOverridden\" class=\"docClass\">callOverridden</a></p>\n\n<pre><code>Ext.define('My.Cat', {\n    constructor: function() {\n        alert(\"I'm a cat!\");\n\n        return this;\n    }\n});\n\nMy.Cat.override({\n    constructor: function() {\n        alert(\"I'm going to be a cat!\");\n\n        var instance = this.callOverridden();\n\n        alert(\"Meeeeoooowwww\");\n\n        return instance;\n    }\n});\n\nvar kitty = new My.Cat(); // alerts \"I'm going to be a cat!\"\n                          // alerts \"I'm a cat!\"\n                          // alerts \"Meeeeoooowwww\"\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>members</span> : Object<div class='sub-desc'>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a></span><div class='sub-desc'><p>this</p>\n</div></li></ul></div></div></div></div></div></div></div>","mixedInto":[],"meta":{},"inheritdoc":null,"inheritable":false,"static":false,"protected":false,"allMixins":[],"subclasses":["Ext.layout.component.Tip"],"extends":"Ext.layout.component.AbstractDock","uses":[],"code_type":"ext_define","private":true,"statics":{"method":[{"required":null,"static":true,"protected":false,"owner":"Ext.Base","name":"addStatics","id":"static-method-addStatics","template":false,"tagname":"method","deprecated":null},{"required":null,"static":true,"protected":false,"owner":"Ext.Base","name":"borrow","id":"static-method-borrow","template":false,"tagname":"method","deprecated":null},{"required":null,"static":true,"protected":false,"owner":"Ext.Base","name":"create","id":"static-method-create","template":false,"tagname":"method","deprecated":null},{"required":null,"static":true,"protected":false,"owner":"Ext.Base","name":"createAlias","id":"static-method-createAlias","template":false,"tagname":"method","deprecated":null},{"required":null,"static":true,"protected":false,"owner":"Ext.Base","name":"getName","id":"static-method-getName","template":false,"tagname":"method","deprecated":null},{"required":null,"static":true,"protected":false,"owner":"Ext.Base","name":"implement","id":"static-method-implement","template":false,"tagname":"method","deprecated":null},{"required":null,"static":true,"protected":false,"owner":"Ext.Base","name":"override","id":"static-method-override","template":false,"tagname":"method","deprecated":null}],"property":[],"css_var":[],"css_mixin":[],"cfg":[],"event":[]},"superclasses":["Ext.Base","Ext.layout.Layout","Ext.layout.component.Component","Ext.layout.component.AbstractDock","Ext.layout.component.Dock"],"name":"Ext.layout.component.Dock","alternateClassNames":[],"files":[{"href":"Dock.html#Ext-layout-component-Dock","filename":"Dock.js"}],"tagname":"class","singleton":false,"id":"class-Ext.layout.component.Dock","deprecated":null});